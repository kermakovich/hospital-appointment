<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="solvd.laba.ermakovich.ha.repository.AppointmentRepository">

    <insert id="save" parameterType="solvd.laba.ermakovich.ha.domain.Appointment" useGeneratedKeys="true" keyProperty="appointment.id">
        INSERT INTO appointments
        (id_doctor,
        id_card,
        date_time_start)
        VALUES
            (#{appointment.doctor.id},
             #{patientId},
             #{appointment.start})
    </insert>

    <select id="isExistByDoctorIdAndTime"  parameterType="solvd.laba.ermakovich.ha.domain.Appointment" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM appointments ap WHERE ap.id_doctor = #{doctor.id} and ap.date_time_start = #{start})
    </select>

    <select id="isExistById" parameterType="java.lang.Long" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM appointments ap WHERE ap.id = #{id})
    </select>

    <select id="isExistPastByPatientIdAndDoctorId" resultType="java.lang.Boolean">
        SELECT EXISTS(
            SELECT 1
            FROM appointments ap
            WHERE ap.id_doctor = #{doctorId}
                and ap.id_card = #{patientId}
                and ap.date_time_start <![CDATA[ < ]]> now())
    </select>

    <select id="isExistByPatientIdAndTime" resultType="java.lang.Boolean">
        SELECT EXISTS(
            SELECT 1
            FROM appointments ap
            WHERE ap.id_card = #{patientId} and ap.date_time_start = #{appointment.start})
    </select>

    <select id="findAppointmentsTimeByDoctorIdAndDate" resultType="java.time.LocalTime" >
        SELECT ap.date_time_start::time
        FROM appointments ap
        WHERE ap.id_doctor = #{id} and ap.date_time_start::date = #{date}
    </select>

    <sql id="buildCriteria">
        <if test="criteria.status != null">
            <choose>
                <when test='criteria.status.name().equals("FUTURE")'>
                    AND ap.date_time_start::date <![CDATA[ >= ]]> now()
                </when>
                <when test='criteria.status.name().equals("DONE")'>
                    AND ap.date_time_start::date <![CDATA[ <= ]]> now()
                </when>
            </choose>
        </if>
        <if test="criteria.date != null">
            AND ap.date_time_start::date = #{criteria.date}
        </if>
    </sql>

    <select id="findAllByPatientIdAndCriteria"  resultMap="appointmentMap">
        SELECT
        ap.id                                       as "appoint_id",
        ap.date_time_start                          as "appoint_date_time_start",
        ap.id_card                                  as "patient_card_id",
        ui.id                                       as "doctor_id",
        ui.name                                     as "doctor_name",
        ui.surname                                  as "doctor_surname",
        ui.fatherhood                               as "doctor_fatherhood",
        ui.email                                    as "doctor_email",
        d.department                                as "doctor_department",
        d.specialization                            as "doctor_specialization",
        d.cabinet                                   as "doctor_cabinet"
        from appointments ap
        LEFT JOIN doctors d on ap.id_doctor = d.user_id
        join user_info ui on ui.id = d.user_id
        <where>
            ap.id_card = #{patientId}
            <include refid="buildCriteria"/>
        </where>
    </select>

    <select id="findAllByDoctorIdAndCriteria"  resultMap="appointmentMap">
        SELECT
        ap.id                                   as "appoint_id",
        ap.date_time_start                      as "appoint_date_time_start",
        pat.id                                  as "patient_id",
        pat.name                                as "patient_name",
        pat.surname                             as "patient_surname",
        pat.fatherhood                          as "patient_fatherhood",
        pat.email                               as "patient_email",
        c.number                                as "patient_card_number",
        c.reg_date                              as "patient_card_reg_date",
        c.patient_id                            as "patient_card_id"
        from appointments ap
        left join patient_cards c on ap.id_card = c.patient_id
        join user_info pat on pat.id = ap.id_card
        <where>
            ap.id_doctor = #{doctorId}
            <include refid="buildCriteria"/>
        </where>
    </select>

    <select id="findById"  resultMap="appointmentMap">
        SELECT
        ap.id                                   as "appoint_id",
        ap.date_time_start                      as "appoint_date_time_start",
        pat.id                                  as "patient_id",
        pat.name                                as "patient_name",
        pat.surname                             as "patient_surname",
        pat.fatherhood                          as "patient_fatherhood",
        pat.email                               as "patient_email",
        c.number                                as "patient_card_number",
        c.reg_date                              as "patient_card_reg_date",
        c.patient_id                            as "patient_card_id",
        uid.id                                  as "doctor_id",
        uid.name                                as "doctor_name",
        uid.surname                             as "doctor_surname",
        uid.fatherhood                          as "doctor_fatherhood",
        uid.email                               as "doctor_email",
        d.department                            as "doctor_department",
        d.specialization                        as "doctor_specialization",
        d.cabinet                               as "doctor_cabinet"
        from appointments ap
        LEFT join patient_cards c on ap.id_card = c.patient_id
        LEFT JOIN doctors d on ap.id_doctor = d.user_id
        join user_info pat on pat.id = ap.id_card
        join user_info uid on uid.id = ap.id_doctor
        WHERE ap.id = #{appId}
    </select>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM appointments ap WHERE ap.id = #{id}
    </delete>

    <resultMap id="appointmentMap" type="solvd.laba.ermakovich.ha.domain.Appointment"  autoMapping="false">
        <id property="id" column="appoint_id"/>
        <result property="start" column="appoint_date_time_start"/>
        <association property="doctor" resultMap="solvd.laba.ermakovich.ha.repository.DoctorRepository.doctorMap"/>
        <association property="patientCard" resultMap="solvd.laba.ermakovich.ha.repository.PatientCardRepository.patientCardMap"/>
    </resultMap>

</mapper>